#!/bin/python
# Modificado desde: https://www.geeksforgeeks.org/dynamic-programming-set-7-coin-change/
import math
import os
import random
import re
import sys

# Complete the getWays function below.
def getWays(S, m, n ):
 
    
    #Construye una tabla de valores para el caso base (n=0)
    table = [[0 for x in range(m)] for x in range(n+1)]
 
    # llena la columna 0 con unos
    for i in range(m):
        table[0][i] = 1
 
    # Llena el resto de la tabla de arriba para abajo 
    for i in range(1, n+1):
        for j in range(m):
 
            # Cuenta las soluciones incluyendo S[j]
            x = table[i - S[j]][j] if i-S[j] >= 0 else 0
 
            # Cuenta las soluciones excluyendo S[j]
            y = table[i][j-1] if j >= 1 else 0
 
            # Suma la cuetna total
            table[i][j] = x + y
 
    return table[n][m-1]

if __name__ == '__main__':
    

    nm = raw_input().split()

    n = int(nm[0])

    m = int(nm[1])

    c = map(int, raw_input().rstrip().split())

    # Print the number of ways of making change for 'n' units using coins having the values given by 'c'
    
    print getWays(c, m, n)
    
    



